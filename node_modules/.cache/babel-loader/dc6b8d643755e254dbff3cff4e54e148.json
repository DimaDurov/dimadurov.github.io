{"remainingRequest":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dimadurov/Desktop/vue-phone-book-master/src/components/ContactGroup/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/src/components/ContactGroup/Form.vue","mtime":1567815064000},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js","mtime":1608020337497},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js","mtime":1608020345485}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { createId } from \"@/helpers\";\nimport { mapMutations, mapState } from \"vuex\";\nexport default {\n  name: \"ContactGroupForm\",\n  components: {},\n  props: [],\n  data: function data() {\n    return {};\n  },\n  computed: _objectSpread({}, mapState(\"contactGroup\", {\n    contactGroup: function contactGroup(state) {\n      return state.model;\n    },\n    editMode: function editMode(state) {\n      return !!state.model.id;\n    }\n  })),\n  methods: _objectSpread({}, mapMutations(\"contactGroup\", [\"addContactGroup\", \"editContactGroup\", \"updateContactGroup\"]), {\n    onSubmitForm: function onSubmitForm() {\n      if (this.editMode) {\n        this.updateContactGroup();\n      } else {\n        this.contactGroup.id = createId();\n        this.addContactGroup();\n      }\n    }\n  })\n};",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,QAAA,QAAA,WAAA;AACA,SAAA,YAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,KAAA,EAAA,EAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA,EAAA;AACA,GANA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,cAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA;AAAA;AAFA,GAAA,CADA,CAPA;AAaA,EAAA,OAAA,oBACA,YAAA,CAAA,cAAA,EAAA,CACA,iBADA,EAEA,kBAFA,EAGA,oBAHA,CAAA,CADA;AAMA,IAAA,YANA,0BAMA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,aAAA,kBAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,CAAA,EAAA,GAAA,QAAA,EAAA;AACA,aAAA,eAAA;AACA;AACA;AAbA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n    <form class=\"contact-group-form\" @submit.prevent=\"onSubmitForm()\">\n      <label>\n        <span class=\"title\">Group Name</span>\n        <span class=\"dot\">:</span>\n        <input v-model=\"contactGroup.name\" placeholder=\"\" required />\n      </label>\n      <label>\n        <span class=\"title\">Group Color</span>\n        <span class=\"dot\">:</span>\n        <input\n          v-model=\"contactGroup.color\"\n          type=\"color\"\n          placeholder=\"Group Color\"\n          required\n        />\n      </label>\n\n      <div class=\"actions\">\n        <button\n          v-if=\"editMode\"\n          type=\"button\"\n          class=\"cancel-btn warning\"\n          @click=\"editContactGroup(-1)\"\n        >\n          Cancel\n        </button>\n        <button type=\"submit\">{{ editMode ? \"Update\" : \"Add\" }} Group</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { createId } from \"@/helpers\";\nimport { mapMutations, mapState } from \"vuex\";\n\nexport default {\n  name: \"ContactGroupForm\",\n  components: {},\n  props: [],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(\"contactGroup\", {\n      contactGroup: state => state.model,\n      editMode: state => !!state.model.id\n    })\n  },\n  methods: {\n    ...mapMutations(\"contactGroup\", [\n      \"addContactGroup\",\n      \"editContactGroup\",\n      \"updateContactGroup\"\n    ]),\n    onSubmitForm() {\n      if (this.editMode) {\n        this.updateContactGroup();\n      } else {\n        this.contactGroup.id = createId();\n        this.addContactGroup();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-group-form {\n}\n@media (min-width: 320px) and (max-width: 450px) {\n  .contact-group-form {\n  }\n}\n</style>\n"],"sourceRoot":"src/components/ContactGroup"}]}