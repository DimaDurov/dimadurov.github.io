{"remainingRequest":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Item.vue","mtime":1608022476106},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js","mtime":1608020337497},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js","mtime":1608020345485}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from \"vuex\";\nexport default {\n  name: \"ContactListItem\",\n  components: {},\n  props: [\"item\"],\n  data: function data() {\n    return {};\n  },\n  computed: _objectSpread({}, mapState(\"contact\", {\n    editMode: function editMode(state) {\n      return state.model.id === this.item.id;\n    }\n  }), {}, mapState(\"contactGroup\", {\n    contactGroups: function contactGroups(state) {\n      return state.items;\n    }\n  }), {\n    group: function group() {\n      var _this = this;\n\n      return this.contactGroups.find(function (c) {\n        return c.id === _this.item.group;\n      });\n    },\n    groupName: function groupName() {\n      return this.group ? this.group.name : \"Ungrouped\";\n    },\n    groupColor: function groupColor() {\n      return {\n        background: this.group ? this.group.color : null\n      };\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(\"contact\", [\"editContact\", \"deleteContact\"]), {\n    handleEditItem: function handleEditItem(item) {\n      this.editContact(this.editMode ? null : item);\n    },\n    handleDeleteItem: function handleDeleteItem(item) {\n      var isOkey = confirm(\"Вы удаляете контакт, вы уверены??\");\n\n      if (isOkey) {\n        this.deleteContact(item);\n      }\n    }\n  })\n};",{"version":3,"sources":["Item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,KAAA,EAAA,CAAA,MAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA,EAAA;AACA,GANA;AAOA,EAAA,QAAA,oBACA,QAAA,CAAA,SAAA,EAAA;AACA,IAAA,QADA,oBACA,KADA,EACA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,CAAA,EAAA;AACA;AAHA,GAAA,CADA,MAMA,QAAA,CAAA,cAAA,EAAA;AACA,IAAA,aAAA,EAAA,uBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AADA,GAAA,CANA;AASA,IAAA,KATA,mBASA;AAAA;;AACA,aAAA,KAAA,aAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OAAA,CAAA;AACA,KAXA;AAYA,IAAA,SAZA,uBAYA;AACA,aAAA,KAAA,KAAA,GAAA,KAAA,KAAA,CAAA,IAAA,GAAA,WAAA;AACA,KAdA;AAeA,IAAA,UAfA,wBAeA;AACA,aAAA;AAAA,QAAA,UAAA,EAAA,KAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,GAAA;AAAA,OAAA;AACA;AAjBA,IAPA;AA0BA,EAAA,OAAA,oBACA,YAAA,CAAA,SAAA,EAAA,CAAA,aAAA,EAAA,eAAA,CAAA,CADA;AAGA,IAAA,cAHA,0BAGA,IAHA,EAGA;AACA,WAAA,WAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,IAAA;AACA,KALA;AAMA,IAAA,gBANA,4BAMA,IANA,EAMA;AACA,UAAA,MAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAEA,UAAA,MAAA,EAAA;AACA,aAAA,aAAA,CAAA,IAAA;AACA;AACA;AAZA;AA1BA,CAAA","sourcesContent":["<template>\n  <li>\n    <div>\n      <p><b>ФИО:</b> {{ item.fullName }}</p>\n      <p><b>Телефонный номер:</b> {{ item.phoneNumber }}</p>\n    </div>\n    <div class=\"actions\">\n      <button\n        class=\"btn-mini\"\n        :class=\"{ warning: editMode }\"\n        @click=\"handleEditItem(item)\"\n      >\n        {{ editMode ? \"Назад\" : \"Редактировать\" }}\n      </button>\n      <button class=\"btn-mini danger\" @click=\"handleDeleteItem(item)\">\n        Удалить\n      </button>\n    </div>\n  </li>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ContactListItem\",\n  components: {},\n  props: [\"item\"],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(\"contact\", {\n      editMode(state) {\n        return state.model.id === this.item.id;\n      }\n    }),\n    ...mapState(\"contactGroup\", {\n      contactGroups: state => state.items\n    }),\n    group() {\n      return this.contactGroups.find(c => c.id === this.item.group);\n    },\n    groupName() {\n      return this.group ? this.group.name : \"Ungrouped\";\n    },\n    groupColor() {\n      return { background: this.group ? this.group.color : null };\n    }\n  },\n  methods: {\n    ...mapMutations(\"contact\", [\"editContact\", \"deleteContact\"]),\n\n    handleEditItem(item) {\n      this.editContact(this.editMode ? null : item);\n    },\n    handleDeleteItem(item) {\n      const isOkey = confirm(\"Вы удаляете контакт, вы уверены??\");\n\n      if (isOkey) {\n        this.deleteContact(item);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components/Contact"}]}