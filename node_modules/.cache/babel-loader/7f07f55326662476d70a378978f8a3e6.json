{"remainingRequest":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Form.vue","mtime":1608022053362},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js","mtime":1608020337497},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js","mtime":1608020345485},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js","mtime":1608020337497},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js","mtime":1608020345485}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PhoneNumber from \"@/components/_shared/PhoneNumber\";\nimport { createId } from \"@/helpers\";\nimport { mapState, mapMutations } from \"vuex\";\nexport default {\n  name: \"ContactForm\",\n  components: {\n    PhoneNumber: PhoneNumber\n  },\n  computed: _objectSpread({}, mapState(\"contact\", {\n    contact: function contact(state) {\n      return state.model;\n    },\n    editMode: function editMode(state) {\n      return !!state.model.id;\n    }\n  }), {}, mapState(\"contactGroup\", {\n    contactGroups: function contactGroups(state) {\n      return state.items;\n    }\n  })),\n  methods: _objectSpread({}, mapMutations(\"contact\", [\"addContact\", \"editContact\", \"updateContact\"]), {\n    onSubmitForm: function onSubmitForm() {\n      if (this.contact.phoneNumber.length !== 19) {\n        return;\n      }\n\n      if (this.editMode) {\n        this.updateContact();\n      } else {\n        this.contact.id = createId();\n        this.addContact();\n      }\n    }\n  })\n};",{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,WAAA,MAAA,kCAAA;AACA,SAAA,QAAA,QAAA,WAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,oBACA,QAAA,CAAA,SAAA,EAAA;AACA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA;AAAA;AAFA,GAAA,CADA,MAKA,QAAA,CAAA,cAAA,EAAA;AACA,IAAA,aAAA,EAAA,uBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA;AAAA;AADA,GAAA,CALA,CALA;AAcA,EAAA,OAAA,oBACA,YAAA,CAAA,SAAA,EAAA,CAAA,YAAA,EAAA,aAAA,EAAA,eAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AACA,UAAA,KAAA,OAAA,CAAA,WAAA,CAAA,MAAA,KAAA,EAAA,EAAA;AACA;AACA;;AAEA,UAAA,KAAA,QAAA,EAAA;AACA,aAAA,aAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,CAAA,EAAA,GAAA,QAAA,EAAA;AACA,aAAA,UAAA;AACA;AACA;AAbA;AAdA,CAAA","sourcesContent":["<template>\n  <div>\n    <h2>{{ editMode ? \"Редактировать\" : \"Добавить\" }} номер телефона</h2>\n    <form class=\"contact-form\" @submit.prevent=\"onSubmitForm()\">\n      <label>\n        <span class=\"title\">Полное имя</span>\n        <span class=\"dot\">:</span>\n        <input v-model=\"contact.fullName\" placeholder=\"ФИО\" required />\n      </label>\n      <label>\n        <span class=\"title\">Номер телефона</span>\n        <span class=\"dot\">:</span>\n        <PhoneNumber v-model=\"contact.phoneNumber\" required />\n      </label>\n\n      <div class=\"actions\">\n        <button\n          v-if=\"editMode\"\n          type=\"button\"\n          class=\"cancel-btn warning\"\n          @click=\"editContact(null)\"\n        >\n          Назад\n        </button>\n        <button type=\"submit\">{{ editMode ? \"Редактировать\" : \"Добавить\" }} контакт</button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport PhoneNumber from \"@/components/_shared/PhoneNumber\";\nimport { createId } from \"@/helpers\";\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ContactForm\",\n  components: {\n    PhoneNumber\n  },\n  computed: {\n    ...mapState(\"contact\", {\n      contact: state => state.model,\n      editMode: state => !!state.model.id\n    }),\n    ...mapState(\"contactGroup\", {\n      contactGroups: state => state.items\n    })\n  },\n  methods: {\n    ...mapMutations(\"contact\", [\"addContact\", \"editContact\", \"updateContact\"]),\n    onSubmitForm() {\n      if (this.contact.phoneNumber.length !== 19) {\n        return;\n      }\n\n      if (this.editMode) {\n        this.updateContact();\n      } else {\n        this.contact.id = createId();\n        this.addContact();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-form {\n}\n@media (min-width: 320px) and (max-width: 450px) {\n  .contact-form {\n  }\n}\n</style>\n"],"sourceRoot":"src/components/Contact"}]}