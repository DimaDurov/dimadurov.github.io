{"remainingRequest":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/src/components/Contact/Item.vue","mtime":1608022476106},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/babel-loader/lib/index.js","mtime":1608020337497},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/cache-loader/dist/cjs.js","mtime":1608020345203},{"path":"/Users/dimadurov/Desktop/vue-phone-book-master/node_modules/vue-loader/lib/index.js","mtime":1608020345485}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ContactListItem\",\n  components: {},\n  props: [\"item\"],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(\"contact\", {\n      editMode(state) {\n        return state.model.id === this.item.id;\n      }\n    }),\n    ...mapState(\"contactGroup\", {\n      contactGroups: state => state.items\n    }),\n    group() {\n      return this.contactGroups.find(c => c.id === this.item.group);\n    },\n    groupName() {\n      return this.group ? this.group.name : \"Ungrouped\";\n    },\n    groupColor() {\n      return { background: this.group ? this.group.color : null };\n    }\n  },\n  methods: {\n    ...mapMutations(\"contact\", [\"editContact\", \"deleteContact\"]),\n\n    handleEditItem(item) {\n      this.editContact(this.editMode ? null : item);\n    },\n    handleDeleteItem(item) {\n      const isOkey = confirm(\"Вы удаляете контакт, вы уверены??\");\n\n      if (isOkey) {\n        this.deleteContact(item);\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Item.vue","sourceRoot":"src/components/Contact","sourcesContent":["<template>\n  <li>\n    <div>\n      <p><b>ФИО:</b> {{ item.fullName }}</p>\n      <p><b>Телефонный номер:</b> {{ item.phoneNumber }}</p>\n    </div>\n    <div class=\"actions\">\n      <button\n        class=\"btn-mini\"\n        :class=\"{ warning: editMode }\"\n        @click=\"handleEditItem(item)\"\n      >\n        {{ editMode ? \"Назад\" : \"Редактировать\" }}\n      </button>\n      <button class=\"btn-mini danger\" @click=\"handleDeleteItem(item)\">\n        Удалить\n      </button>\n    </div>\n  </li>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ContactListItem\",\n  components: {},\n  props: [\"item\"],\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(\"contact\", {\n      editMode(state) {\n        return state.model.id === this.item.id;\n      }\n    }),\n    ...mapState(\"contactGroup\", {\n      contactGroups: state => state.items\n    }),\n    group() {\n      return this.contactGroups.find(c => c.id === this.item.group);\n    },\n    groupName() {\n      return this.group ? this.group.name : \"Ungrouped\";\n    },\n    groupColor() {\n      return { background: this.group ? this.group.color : null };\n    }\n  },\n  methods: {\n    ...mapMutations(\"contact\", [\"editContact\", \"deleteContact\"]),\n\n    handleEditItem(item) {\n      this.editContact(this.editMode ? null : item);\n    },\n    handleDeleteItem(item) {\n      const isOkey = confirm(\"Вы удаляете контакт, вы уверены??\");\n\n      if (isOkey) {\n        this.deleteContact(item);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}